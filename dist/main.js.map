{"version":3,"file":"main.js","mappings":"mBAcA,IAgBIA,EACFC,EACAC,EACAC,EAnBIC,EAAgBC,SAASC,cAAc,gCACvCC,EAAiBF,SAASC,cAAc,iCAE1CE,EAdJ,WACE,QAAQ,GACN,KAAMC,OAAOC,MAAQ,KACnB,OAAO,IACT,KAAMD,OAAOC,MAAQ,IACnB,OAAO,IACT,QACE,OAAO,IAEb,CAKgBC,GAUhBP,EAAcQ,iBAAiB,SAR/B,WACEP,SAASC,cAAc,mBAAmBL,YAAcO,CAC1D,IAOAD,EAAeK,iBAAiB,SALhC,WACEP,SAASC,cAAc,mBAAmBL,YAAcO,CAC1D,IAUA,IAAIK,GAAS,EACPC,EAAc,6BACdC,EAASV,SAASC,cAAc,mBAgBhCU,EAAM,WACVH,GAAS,EACTE,EAAOE,UAAUC,OAAOJ,EAC1B,EAEAC,EAAOH,iBAAiB,aAnBV,SAACO,GACbN,GAAS,EACTE,EAAOE,UAAUG,IAAIN,GACrBd,EAASmB,EAAME,MAAQN,EAAOO,WAC9BrB,EAAac,EAAOd,UACtB,IAeAc,EAAOH,iBAAiB,aAbX,SAACO,GACPN,IACLX,EAAIiB,EAAME,MAAQN,EAAOO,WACzBnB,EAAYD,EAAIF,EAChBe,EAAOd,WAAaA,EAAaE,EACnC,IASAY,EAAOH,iBAAiB,aAAcI,GACtCD,EAAOH,iBAAiB,UAAWI,GAInC,IAAMO,EAAalB,SAASC,cAAc,mBAEpCkB,GADanB,SAASC,cAAc,kBAC7BD,SAASC,cAAc,UAC9BmB,EAAoBpB,SAASqB,iBAAiB,sCAO9CC,EAAmBtB,SAASqB,iBAAiB,8BAEnD,SAASE,EAAqBT,EAAOU,EAAMC,EAAaC,GAEtD,IAAMC,EAASH,EAAKI,WAAW3B,cAAc,IAAD,OAAKwB,IAC3CI,EAAUL,EAAKI,WAAW3B,cAAc,IAAD,OAAKyB,IAElDC,EAAOf,UAAUkB,OAAO,GAAD,OAAIL,EAAW,iBACtCE,EAAOf,UAAUkB,OAAO,GAAD,OAAIL,EAAW,kBACtCI,EAAQjB,UAAUkB,OAAO,GAAD,OAAIJ,EAAY,gBAC1C,CAEAR,EAAWX,iBAAiB,SAAS,WACnCgB,EAAqBT,MAAOI,EAAY,iBAAkB,iBAjB1DC,EAAKP,UAAUkB,OAAO,sBAmBxB,IAEAV,EAAkBW,SAAQ,SAAAP,GACxBA,EAAKjB,iBAAiB,SAAS,SAACO,GAC1BV,OAAOC,OAAS,KAClBkB,EAAqBT,EAAOU,EAAM,0BAA2B,6BAEjE,GACF,IAEAF,EAAiBS,SAAQ,SAACP,GACxBA,EAAKjB,iBAAiB,SAAS,SAACO,GAAK,OAAKS,EAAqBT,EAAOU,EAAM,oBAAqB,+BAA+B,GAClI,G","sources":["webpack://vegait-testtask/./src/pages/index.js"],"sourcesContent":["import './index.css'\n\n// Slider\nfunction getCardWidth() {\n  switch (true) {\n    case (screen.width > 1280):\n      return 380;\n    case (screen.width > 768):\n      return 260;\n    default:\n      return 130;\n  }\n}\n\nconst sliderForward = document.querySelector('.slider__button_type_forward');\nconst sliderBackward = document.querySelector('.slider__button_type_backward');\n\nlet cardWidth = getCardWidth();\n\nfunction next() {\n  document.querySelector('.slider__images').scrollLeft += cardWidth;\n}\n\nfunction prev() {\n  document.querySelector('.slider__images').scrollLeft -= cardWidth;\n}\n\nsliderForward.addEventListener('click', next)\nsliderBackward.addEventListener('click', prev)\n\nlet startX,\n  scrollLeft,\n  x,\n  distance;\n\nlet isDown = false;\nconst activeClass = 'slider__images_type_active'\nconst slider = document.querySelector('.slider__images');\n\nconst start = (event) => {\n  isDown = true;\n  slider.classList.add(activeClass);\n  startX = event.pageX - slider.offsetLeft;\n  scrollLeft = slider.scrollLeft;\n}\n\nconst move = (event) => {\n  if (!isDown) return;\n  x = event.pageX - slider.offsetLeft;\n  distance = (x - startX);\n  slider.scrollLeft = scrollLeft - distance;\n}\n\nconst end = () => {\n  isDown = false;\n  slider.classList.remove(activeClass);\n}\n\nslider.addEventListener('mousedown', start);\nslider.addEventListener('mousemove', move);\nslider.addEventListener('mouseleave', end);\nslider.addEventListener('mouseup', end);\n\n\n// Toggle Header\nconst menuButton = document.querySelector('.header__button');\nconst headerMenu = document.querySelector('.header__links');\nconst body = document.querySelector('.body')\nconst expandMenuButtons = document.querySelectorAll('.header__menu-link_type_expandable')\n\nfunction toggleOverlay() {\n  body.classList.toggle('overlay_type_active')\n}\n\n// Accordion\nconst accordionButtons = document.querySelectorAll('.accordion__item-container');\n\nfunction toggleExpandableItem(event, item, buttonClass, contentClass) {\n\n  const button = item.parentNode.querySelector(`.${buttonClass}`);\n  const content = item.parentNode.querySelector(`.${contentClass}`)\n\n  button.classList.toggle(`${buttonClass}_type_active`)\n  button.classList.toggle(`${buttonClass}_type_default`)\n  content.classList.toggle(`${contentClass}_type_active`)\n}\n\nmenuButton.addEventListener('click', () => {\n  toggleExpandableItem(event, menuButton, 'header__button', 'header__links')\n  toggleOverlay();\n})\n\nexpandMenuButtons.forEach(item => {\n  item.addEventListener('click', (event) => {\n    if (screen.width <= 830) {\n      toggleExpandableItem(event, item, 'header__dropdown-button', 'header__dropdown-container')\n    }\n  })\n})\n\naccordionButtons.forEach((item) => {\n  item.addEventListener('click', (event) => toggleExpandableItem(event, item, 'accordion__button', 'accordion__content-container'))\n})\n\n\nfunction getCardCount(n, k, cards) {\n  let total = 0\n  for (let i = 0; i < k; i++) total += cards[i]\n  let best = total\n  for (let i = k - 1, j = cards.length - 1; ~i; i--, j--)\n    total += cards[j] - cards[i]\n  best = Math.max(best, total)\n  return best\n}\n"],"names":["startX","scrollLeft","x","distance","sliderForward","document","querySelector","sliderBackward","cardWidth","screen","width","getCardWidth","addEventListener","isDown","activeClass","slider","end","classList","remove","event","add","pageX","offsetLeft","menuButton","body","expandMenuButtons","querySelectorAll","accordionButtons","toggleExpandableItem","item","buttonClass","contentClass","button","parentNode","content","toggle","forEach"],"sourceRoot":""}